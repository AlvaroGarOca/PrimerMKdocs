{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Proyecto de documentaci\u00f3n - \u00c1lvaro Garc\u00eda Oca\u00f1a","text":"<p>Este MKdocs tiene como funci\u00f3n documentar y mostrar los pasos que he realizado en la classroom de Onisim, mostrando paso a paso cada funci\u00f3n, adem\u00e1s de explicar su utilidad y funcionamiento en casos reales.</p> <p>Para navegar...</p> <p>En el men\u00fa de la izquierda se desglosa cada herramienta usada, y cada apartado tiene su informaci\u00f3n.</p>"},{"location":"#quien-soy-yo","title":"\u00bfQui\u00e9n soy yo?","text":"<p>Me llamo \u00c1lvaro Garc\u00eda Oca\u00f1a, estoy acabando el Grado Superior de ASIR en el I.E.S Leonardo Da Vinci, en Albacete. Desde hace a\u00f1os, quer\u00eda ser programador porque me encantaban los videojuegos, el d\u00eda que empec\u00e9 a programar me di cuenta de que no era lo m\u00edo. Ahora estoy descubriendo el mundo del cloud y los sistemas, y he encontrado un campo y un camino que me gusta seguir.</p> <p>Me gusta aprender y mejorar. En esta documentaci\u00f3n, ense\u00f1o todo lo que he ido aprendiendo durante mis pr\u00e1cticas en BaseTIS, y que espero poder aplicarlas tambi\u00e9n con ellos si es posible. </p>"},{"location":"#herramientas-usadas","title":"Herramientas usadas","text":""},{"location":"#mkdocs","title":"MKdocs","text":""},{"location":"#amazon-web-services","title":"Amazon Web Services","text":""},{"location":"#docker","title":"Docker","text":""},{"location":"#terraform","title":"Terraform","text":""},{"location":"#funcionamiento-de-esta-documentacion","title":"Funcionamiento de esta documentaci\u00f3n","text":""},{"location":"pages/Nginx/","title":"Instalaci\u00f3n de  Nginx en la m\u00e1quina EC2","text":"<p>Ya tenemos nuestra m\u00e1quina funcionando, ahora necesitamos un servicio instalado en ella. Para este ejemplo, siguiendo los ejercicios de mi tutor, vamos a instalar un Nginx en la m\u00e1quina que creamos anteriormente.</p> <p>A trav\u00e9s de SSH, tenemos que hacer una serie de comandos para llevar a cabo la instalaci\u00f3n. Al igual que otros muchos programas o servicios, esto se hace de la misma manera, teniendo en cuenta que es un Amazon Linux 2. Teniendo en cuenta que ya estamos conectados a nuestra m\u00e1quina, vamos a comprobar si est\u00e1 disponible para instalar directamente en la m\u00e1quina.</p> <p></p> Comando <pre><code>sudo amazon-linux-extras list | grep nginx\n</code></pre> <p>Vemos que est\u00e1 disponible, as\u00ed que vamos a habilitarlo para poder iniciar con la instalaci\u00f3n. </p> <p></p> Comando <pre><code>sudo amazon-linux-extras enable nginx1\n</code></pre> <p>El comando nos indicar\u00e1 al final qu\u00e9 pasos debemos seguir una vez hecho esto. Lo primero que nos indica es que debemos hacer una limpieza de metadatos de los repositorios para instalar Nginx. As\u00ed que ejecutamos este comando:</p> <p></p> Comando <pre><code>sudo yum clean metadata\n</code></pre> <p>Ahora que tenemos el terreno listo y preparado, vamos a instalar Nginx. Muy sencillo, usamos el repositorio yum tambi\u00e9n para instalarlo con el siguiente comando:</p> <p></p> Comando <pre><code>sudo yum -y install nginx\n</code></pre> <p>Al final veremos lo instalado, tanto Nginx como sus dependencias.</p> <p></p> <p>Para asegurarnos, vamos a hacer una serie de comandos, ya que lo normal es que tras una instalaci\u00f3n no se active por si solo un servicio. Hacemos por orden los comandos mostrados en la captura.</p> <p></p> Comandos <pre><code>sudo systemctl start nginx\nsudo systemctl enable nginx\nsudo systemctl status nginx\n</code></pre> <p>Y con esto est\u00e1 instalado y preparado. Pero la m\u00e1quina a\u00fan necesita algo m\u00e1s, ya que viene configurado con su firewall para evitar que se conecten directamente. Para hacer una excepci\u00f3n, a\u00f1adimos una iptable nueva donde aceptaremos conexiones HTTP por el puerto 80.</p> <p></p> Comando <pre><code>sudo iptables -I INPUT -p tcp --dport 80 -j ACCEPT\n</code></pre> <p>Y ahora s\u00ed, ya podemos usar nuestro Nginx. Para comprobar que la conexi\u00f3n a la m\u00e1quina va bien, vamos a nuestro navegador y conectamos por HTTP a la m\u00e1quina, introduciendo su IP p\u00fablica.</p> <p></p> <p>\u00a1Hecho!</p>"},{"location":"pages/instalacionEC2/","title":"Creaci\u00f3n de EC2","text":""},{"location":"pages/instalacionEC2/#creacion-y-puesta-en-marcha-de-ec2","title":"Creaci\u00f3n y puesta en marcha de EC2","text":"<p>Necesitamos una m\u00e1quina EC2 para muchas cosas, para albergar un servidor web, por ejemplo. Para este ejemplo, la necesitaba para instalar un Nginx. Antes de ello, cree una VPC con sus subredes. </p> <p> Creaci\u00f3n y puesta en marcha de VPC y sus subredes </p>"},{"location":"pages/instalacionEC2/#creacion-de-la-ec2","title":"Creaci\u00f3n de la EC2","text":"<p>Para crear nuestra EC2, nos logueamos en nuestra cuenta y vamos al servicio de EC2. Una vez ah\u00ed, debemos ir a las instancias en el men\u00fa de la izquierda y seleccionar \"Lanzar instancias\"</p> <p></p> <p>Se nos abrir\u00e1 una p\u00e1gina con mucha informaci\u00f3n, as\u00ed que vamos paso a paso. Lo primero es establecer un nombre para la EC2 y ponerle las etiquetas que nos hagan falta. En mi caso, le puse el nombre a la EC2 y avanc\u00e9.</p> <p></p> <p>M\u00e1s abajo, es donde elegiremos la AMI. Para este ejemplo, selecion\u00e9 un SO liviano y r\u00e1pido, un Amazon Linux 2. Aqu\u00ed depende de lo que necesitemos hacer. </p> <p></p> <p>Despu\u00e9s nos encontramos con el tipo de instancia. Aqu\u00ed debemos tener cuidado (1) ya que este es el hardware que usar\u00e1 nuestra m\u00e1quina EC2. En mi caso he escogido una de las m\u00e1s simples y baratas, pero que es m\u00e1s que suficiente para lo que voy a usarla.</p> <ol> <li> Dejo aqu\u00ed un enlace de inter\u00e9s para comparar r\u00e1pidamente instancias y encontrar la que nos interese  https://instances.vantage.sh/</li> </ol> <p></p> <p>A continuaci\u00f3n, tenemos el par de claves...</p> <p>Los pares de clave son... clave... ba dum tss</p> <p>En la siguiente captura muestro lo que NO hay que hacer. Si queremos usar una conexi\u00f3n SSH, necesitaremos un par de claves. Adem\u00e1s, es mejor siempre crearlas por si acaso, ya que no sabemos cuando la podremos necesitar.</p> <p></p> <p>Para evitar esto, no debemos seleccionar la opci\u00f3n que muestro arriba. Debemos hacer lo que muestro en las dos siguientes im\u00e1genes:</p> <p> </p> <p>Continuando, haremos el paso m\u00e1s importante, que aqu\u00ed ya tenemos los pasos previos configurados, si no hay que hacer lo que indico aqu\u00ed. Vamos a seleccionar la VPC que queremos usar, adem\u00e1s de la subred. En este caso quiero que la EC2 sea p\u00fablica, as\u00ed que escojo la subred p\u00fablica que configur\u00e9 en pasos anteriores. Adem\u00e1s, ya que como quiero que sea p\u00fablica, habilito la opci\u00f3n \"Asignar autom\u00e1ticamente la IP p\u00fablica\". </p> <p></p> <p>Despu\u00e9s de esto, necesitaremos un grupo de seguridad para controlar la entrada a la m\u00e1quina. Como no tenemos ninguno hecho, dejamos marcada la opci\u00f3n de crear un grupo de seguridad, le ponemos un nombre y una descripci\u00f3n...</p> <p></p> <p>Y despu\u00e9s a\u00f1adimos las reglas deseadas. Aqu\u00ed, yo configuro las reglas para que solo se pueda acceder a la m\u00e1quina por SSH a trav\u00e9s de mi IP p\u00fablica. Tambi\u00e9n configuro la m\u00e1quina para que se pueda conectar a esta a trav\u00e9s del puerto 80 HTTP, para todo internet.</p> <p></p> <p>Por \u00faltimo, vemos el resumen para asegurarnos de que est\u00e1 todo tal y como lo necesitamos.</p> <p></p> <p>Tras hacer clic en \"Lanzar instancia\", ya tendremos nuestra m\u00e1quina EC2 lanzada y lista para trabajar con ella. </p>"},{"location":"pages/instalacionEC2/#conexion-a-la-ec2","title":"Conexi\u00f3n a la EC2","text":"<p>Ahora solo falta conectar a la m\u00e1quina a trav\u00e9s de SSH para comprobar su funcionamiento. Tenemos que seleccionar nuestra m\u00e1quina, y una vez hecho, le damos a conectar.</p> <p></p> <p>Vamos a la pesta\u00f1a de Cliente SSH. Aqu\u00ed vemos las instrucciones que debemos seguir para conectar a la m\u00e1quina.</p> <p></p> <p>En mi caso, lo hice a trav\u00e9s de un CMD de Windows. Aqu\u00ed podemos ver como la conexi\u00f3n fue correcta y funcional.</p> <p></p> <p>\u00a1Listo!</p>"},{"location":"pages/instalacionMKdocs/","title":"Instalaci\u00f3n y preparaci\u00f3n de MKdocs","text":"<p>MKdocs es compatible con:</p> <ul> <li> Linux</li> <li> Windows </li> <li> Mac</li> </ul> <p>En este caso, los ejemplos de los comandos son los usados en Linux, pero los pasos son los mismos.</p> <p>Sugiero hacer lo siguiente desde  Visual Studio Code, colocados en el repositorio con el que trabajaremos.</p>"},{"location":"pages/instalacionMKdocs/#instalacion-de-python","title":"Instalaci\u00f3n de  Python","text":"<p>Para poder trabajar con MKdocs, necesitamos tener instalado Python. </p> Instalar la \u00faltima versi\u00f3n de Python<pre><code>sudo apt install python3.12\n</code></pre> <p>Una vez instalado, necesitaremos \"venv\", una herramienta para crear entornos aislados para proyectos en  Python. Instalamos venv<pre><code>sudo apt install python3.12-venv\n</code></pre></p>"},{"location":"pages/instalacionMKdocs/#creacion-del-entorno-virtual","title":"Creaci\u00f3n del entorno virtual","text":"<p>Una vez instalado Python y venv, tenemos que crear el entorno virtual donde crearemos nuestro proyecto. Usamos el siguiente comando para crear el entorno, con una carpeta oculta. Luego, lo activamos.<pre><code>python3 -m venv .venv\nsource .venv/bin/activate\n</code></pre></p> Para asegurarnos que se usa el entorno que hemos activado<pre><code>which python3\n</code></pre>"},{"location":"pages/instalacionMKdocs/#instalacion-de-mkdocs","title":"Instalaci\u00f3n de MKdocs","text":"<p>Una vez preparado el entorno con sus respectivas instalaciones previas, instalamos Mkdocs.</p> Usamos pip para la instalaci\u00f3n<pre><code>pip install mkdocs\n</code></pre> Al estar colocados en el repositorio, ejecutamos este comando para crear los archivos necesarios<pre><code>mkdocs new .\n</code></pre>"},{"location":"pages/instalacionMKdocs/#archivo-requirementstxt","title":"Archivo requirements.txt","text":"<p>Para evitar posibles conflictos con temas, o algunas necesidades de MKdocs, vamos a usar un archivo requirements.txt. Si nos fijamos, no tendremos ning\u00fan archivo con este nombre, por lo que lo creamos nosotros mismos y lo a\u00f1adimos en la carpeta del proyecto junto al mkdocs.yml que se habr\u00e1 creado. Dejo aqu\u00ed el requirements que he usado yo para este proyecto:</p> Requirements.txt<pre><code>mkdocs==1.6.1\nmkdocs-get-deps==0.2.0\nmkdocs-material==9.6.11\nmkdocs-material-extensions==1.3.1\npymdown-extensions==10.14.3pip\n</code></pre> <p>Atento/a a esto</p> <p>Te habr\u00e1s percatado de que en cada l\u00ednea, adem\u00e1s de incorporar qu\u00e9 se necesita, tambi\u00e9n pone su versi\u00f3n. Es mejor indicar la versi\u00f3n con la que va a trabajar el proyecto, as\u00ed vamos a evitar posibles problemas de versiones m\u00e1s adelante con actualizaciones que tal vez no sean compatibles con alguna otra cosa.</p> Una vez tenemos el archivo puesto donde toca, ejecutamos este comando para aplicarlo<pre><code>pip install -r requirements.txt\n</code></pre>"},{"location":"pages/instalacionMKdocs/#lanzar-nuestro-mkdocs","title":"Lanzar nuestro MKdocs","text":"<p>Ya lo tenemos todo listo, as\u00ed que ahora solo falta lanzar nuestro proyecto. </p> Usamos el puerto 8080 para evitar conflicto de puertos.<pre><code>mkdocs server -a localhost:8080\n</code></pre> <p>A tener en cuenta</p> <p>En mi instalaci\u00f3n, encontr\u00e9 un problema. Si instalas MKdocs en Windows, ya que yo estoy usando WSL para este proyecto, por defecto se lanza MKdocs en el puerto 8000, el cual Windows tiene capado para alg\u00fan servicio. As\u00ed que, como he dicho arriba, es mejor usar el 8080 para evitar problemas y quebraderos de cabeza.</p> <p>Con todo esto, ya tenemos listo nuestro MKdocs para empezar a trabajar </p>"},{"location":"pages/instalacionVPC/","title":"Creaci\u00f3n de una VPC y sus subredes","text":"<p>Con una VPC, podemos tener nuestra red virtual privada y las subredes que necesitemos dentro de ella. En AWS se pueden crear y podemos generar subredes en las zonas de disponibilidad que tenemos en cada regi\u00f3n. </p>"},{"location":"pages/instalacionVPC/#como-crear-una-vpc","title":"C\u00f3mo crear una VPC","text":"<p>Una vez estamos dentro de nuestra cuenta de AWS, buscamos el servicio VPC.</p> <p></p> <p>Cuando estamos dentro de VPC, veremos un bot\u00f3n naranja, le hacemos clic para entrar al men\u00fa de creaci\u00f3n</p> <p></p> <p>A la hora de crear la VPC, necesitamos saber cual ser\u00e1 el CIDR que usaremos. En este caso uso el 10.0.0.0/24, aunque las subredes tendr\u00e1n pocas IPs disponibles, para esto caso est\u00e1 bien. Si queremos m\u00e1s IP en las subredes, deber\u00edamos poner por ejemplo un /16.</p> <p></p> <p>Por \u00faltimo, tenemos que a\u00f1adirle una etiqueta para identificar m\u00e1s f\u00e1cilmente m\u00e1s adelante el recurso. Despu\u00e9s, le damos a crear VPC.</p> <p></p> <p>Ya tenemos nuestra VPC creada </p> <p>Este es el resultado</p> <p></p>"},{"location":"pages/instalacionVPC/#creacion-de-las-subredes","title":"Creaci\u00f3n de las subredes","text":"<p>Ahora que tenemos nuestra VPC lista para trabajar con ella, vamos a crear las subredes que necesitamos. Para este caso, necesitamos seis subredes. En cada zona, vamos a crear una p\u00fablica y otra privada. Para empezar, vamos a subredes...</p> <p></p> <p>Le damos al bot\u00f3n naranja de crear subred y nos aparecer\u00e1 la siguiente p\u00e1gina. Lo primero que haremos, ser\u00e1 seleccionar la VPC que hemos creado como muestro a continuaci\u00f3n.</p> <p></p> <p>Despu\u00e9s de asegurarnos que es la VPC correcta, si bajamos vemos la opci\u00f3n de crear la subred. Aqu\u00ed, crearemos tantas como necesitemos. Os muestro como crear la primera, ya que luego el \u00fanico cambio a hacer es cambiar el CIDR, que es la IP que albergar\u00e1 cada subred.</p> <p></p> <p>Cuidado con las CIDR</p> <p>Asegurate de poner correctamente la IP de cada subred, esto es lo m\u00e1s importante. AWS te avisar\u00e1 solamente si hay un conflicto con la IP, pero aseg\u00farate de ponerlas bien ya que puedes dejar menos IP por subred de las que deseas. A la hora de poner el bloque de CIDR de la subred, f\u00edjate como a la derecha indica las IPs que ofrece la IP que has colocado.</p> <p>Cuando crees todas las subredes, este ser\u00e1 el resultado. Ya est\u00e1n listas las subredes, ya puedes seguir configur\u00e1ndolas tal y como necesites. </p> <p></p>"},{"location":"pages/instalacionVPC/#crear-una-puerta-de-enlace","title":"Crear una puerta de enlace","text":"<p>Cuidado con el idioma</p> <p>No confundir Puerta de enlace de internet con Gateway NAT. En la versi\u00f3n en castellano puede ser un poco confuso.</p> <p>Necesitamos una puerta de enlace para nuesta VPC, ya que sin ella, no vamos a poder salir a internet con las subredes p\u00fablicas. Para ello, en el servicio de VPC, vamos a las opciones de Puerta de enlance de internet.</p> <p></p> <p>Crearla es tan sencillo como se muestra en la imagen. Tenemos que especificar el nombre y ponerle las etiquetas que necesitemos poner, tan f\u00e1cil como eso.</p> <p></p> <p>Una vez creada, debemos enlazarla con nuestra VPC.</p> <p></p> <p></p> <p>Con esto ya tenemos lista la puerta de enlace para las subredes que lo necesiten.</p>"},{"location":"pages/instalacionVPC/#editar-tabla-de-enrutamiento","title":"Editar tabla de enrutamiento","text":"<p>Para hacer que una subred sea p\u00fablica, tenemos que editar su tabla de enrutamiento y a\u00f1adir la puerta de enlace que hemos creado anteriormente. Vamos a la subred que vamos a usar, la seleccionamos y en detalles, bajamos hasta encontrar tabla de enrutamiento, donde clicamos para entrar en sus opciones.</p> <p></p> <p>Nos saldr\u00e1 la tabla de enrutamiento asignada a esa subred. En la pesta\u00f1a de rutas, tras seleccionarla, vamos a editar las rutas.</p> <p></p> <p>Aqu\u00ed, vamos a a\u00f1adir una nueva ruta. Queremos que esta subred sea p\u00fablica, as\u00ed que le vamos a asignar 0.0.0.0/0 (todas las redes, osease, internet) y el destino ser\u00e1 la puerta de enlace que creamos antes. Seleccionamos esta y le damos a guardar cambios.</p> <p></p> <p>Con todo esto, ya tenemos nuestra VPC configurada y la subred preparada para funcionar a nivel de internet. </p>"},{"location":"pages/usoAWS/","title":"Uso de  en este proyecto","text":""},{"location":"pages/usoMKdocs/","title":"Uso de MKdocs en este proyecto","text":""},{"location":"pages/usoMKdocs/#por-que-mkdocs","title":"\u00bfPor qu\u00e9 MKdocs?","text":"<p>Principalmente, porque nunca la he usado y considero que es muy \u00fatil para lo esencial, mantener documentado todo el trabajo que se realiza, ya sea para resolver futuras dudas o para ayudar a gente que no sepa c\u00f3mo usarlo al igual que yo no sab\u00eda al inicio de este proyecto.</p>"},{"location":"pages/usoMKdocs/#que-utilidad-tiene-en-comparacion-a-crear-una-web-con-html-y-css","title":"\u00bfQu\u00e9 utilidad tiene en comparaci\u00f3n a crear una web con HTML y CSS?","text":"<p>Es mucho m\u00e1s sencillo y r\u00e1pido. Lo bueno de MKdocs, es que puedes centrarte m\u00e1s en el contenido y en la estructura de este. Con HTML, al final, se podr\u00eda hacer lo mismo, pero ser\u00eda m\u00e1s lento. La finalidad de usar MKdocs, es entregar y ofrecer una documentaci\u00f3n que sea accesible tanto para el usuario como para quien ofrece el contenido.</p>"},{"location":"pages/usoMKdocs/#conclusiones","title":"Conclusiones","text":"<p>Es la primera vez que uso MKdocs y tambi\u00e9n MarkDown, y es tan f\u00e1cil de usar que enseguida le pill\u00e9 el truco. Yo tambi\u00e9n soy de los que opinan que cada proyecto deber\u00eda tener su documentaci\u00f3n. La idea de este proyecto es demostrar que se puede ofrecer un contenido de mucha utilidad, tanto para la empresa como para internet, de manera eficiente, r\u00e1pida y c\u00f3moda. Adem\u00e1s, al integrarlo con el resto de tecnolog\u00edas, hace que la incorporaci\u00f3n de nuevo contenido se entregue en cuesti\u00f3n de segundos al instante, lo que lo hace mucho m\u00e1s interesante.</p>"}]}